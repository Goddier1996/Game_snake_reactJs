[{"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\index.js":"1","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\App.js":"2","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\login.js":"3","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\register.js":"4","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\profile.js":"5","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\admin.js":"6","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\game.js":"7","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\updateDetails.js":"8","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\components\\menu.js":"9","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\components\\formField.js":"10","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\Snake.js":"11","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\components\\Food.js":"12","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\components\\fotter.js":"13"},{"size":199,"mtime":1659529760482,"results":"14","hashOfConfig":"15"},{"size":997,"mtime":1660396748719,"results":"16","hashOfConfig":"15"},{"size":6780,"mtime":1659784431996,"results":"17","hashOfConfig":"15"},{"size":6997,"mtime":1659787888741,"results":"18","hashOfConfig":"15"},{"size":3071,"mtime":1659785706479,"results":"19","hashOfConfig":"15"},{"size":3923,"mtime":1659528188653,"results":"20","hashOfConfig":"15"},{"size":5191,"mtime":1659789969827,"results":"21","hashOfConfig":"15"},{"size":8067,"mtime":1659787775448,"results":"22","hashOfConfig":"15"},{"size":2056,"mtime":1660393781913,"results":"23","hashOfConfig":"15"},{"size":1363,"mtime":1659529413723,"results":"24","hashOfConfig":"15"},{"size":325,"mtime":1659529730895,"results":"25","hashOfConfig":"15"},{"size":322,"mtime":1659529431102,"results":"26","hashOfConfig":"15"},{"size":408,"mtime":1660396663262,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"y8dj2h",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\index.js",[],["63","64"],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\App.js",[],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\login.js",["65","66","67","68","69","70","71","72","73","74"],"import { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport './pages.css';\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport React from 'react'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\n    // הגדרת משתנים עבור טופס התחברות\r\n    const history = useHistory()\r\n    const [userName1, setUserName] = useState('')\r\n    const [password1, setPassword] = useState('')\r\n\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    let userDetails = JSON.parse(sessionStorage.getItem('usersArray')) // קבלת משתמש ספציפי כדי לעדכן את הפרטים שלו\r\n\r\n\r\n\r\n\r\n    //ההרשמה כשלוחצים על כפתור הרשמה\r\n    const signUp = () => {\r\n\r\n        if (userName1 === '' || password1 === '') {\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'oops..',\r\n                text: 'All fields must be filled in.',\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        if (userName1 != '' || password1 != '') {\r\n\r\n            let usersArray = JSON.parse(localStorage.getItem('users')); // קבלת המשתמשים ממאגר הנתונים והשמתם בתוך משתנה\r\n\r\n            for (let i = 0; i < usersArray.length; i++) // מעבר על כמות המשתמשים \r\n            {\r\n                if (usersArray[i].userName == userName1 && usersArray[i].password == password1) { // בדיקה אם השם משתמש והסיסמא שהמשתמש הזין, זהים לנתונים שקבלנו ממאגר הנתונים\r\n                    sessionStorage.setItem('usersArray', JSON.stringify(usersArray[i])); // שמירת אובייקט המשתמש בתוך המאגר -> Session Storage \r\n                    history.push('Profile'); // לאחר התחברות המשתמש יועבר לדף הפרופיל\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        if ('admin' == userName1 && 'admin1234admin' == password1) { // בדיקה האם המנהל הוא המשתמש שמתחבר \r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'successfully',\r\n                text: 'Admin Login succes',\r\n            })\r\n\r\n            history.push('Admin'); // לאחר התחברות המנהל יועבר לדף מנהל\r\n        }\r\n\r\n\r\n\r\n        else { // אם אין משתמש כזה במאגר הנתונים אז מציג הודעה מתאימה\r\n            alert('Login unsucces, please try again');\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const signUpDemoUser = () => {\r\n\r\n        let user = {\r\n            userName: \"User\",\r\n            password: \"12345678\",\r\n            city: \"Tel-Aviv\",\r\n            email: \"user@gmail.com\",\r\n            startDate: \"20/07/96\",\r\n            profileImg: \"https://i.postimg.cc/d31L9Ct5/men.png\"\r\n        }\r\n\r\n        sessionStorage.setItem('usersArray', JSON.stringify(user));\r\n        history.push('Profile');\r\n        return;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (userDetails != null) {\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className='main1'>\r\n                    <img src={require(\"../images/gamrz.jpg\").default}></img>\r\n                    <div className=\"content\">\r\n                        <h1>Welcome</h1>\r\n                        <p>To Snake Game</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <>\r\n                    <Modal show={show} onHide={handleClose}>\r\n\r\n                        <div class=\"sign-box\">\r\n                            <h1>Sign In<p></p></h1>\r\n\r\n                            <form action=\"#\" method=\"get\" autocomplete=\"off\">\r\n\r\n                                <div class=\"input-field\">\r\n                                    <p>User Name :</p>\r\n                                    <input class=\"input\" onInput={(event) => { setUserName(event.target.value) }} />\r\n                                </div>\r\n\r\n                                <div class=\"input-field\">\r\n                                    <p>Password :</p>\r\n                                    <input type=\"password\" class=\"input\" onInput={(event) => { setPassword(event.target.value) }} />\r\n                                </div>\r\n\r\n\r\n                                <div class=\"input-field right\">\r\n                                    <button class=\"btn\" onClick={signUp} >Play</button>\r\n                                </div>\r\n\r\n\r\n                                <div className='DemoUserAndDoctor'>\r\n                                    <a href=\"\" onClick={signUpDemoUser} >Connect Demo User</a>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </Modal>\r\n                </>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    else {\r\n\r\n        return (\r\n            <>\r\n\r\n                <div className='main1'>\r\n                    <img src={require(\"../images/gamrz.jpg\").default}></img>\r\n                    <div className=\"content\">\r\n                        <h1>Welcome</h1>\r\n                        <p>To Snake Game</p>\r\n                        <Button variant=\"warning\" onClick={handleShow}>Start Game</Button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <>\r\n                    <Modal show={show} onHide={handleClose}>\r\n\r\n                        <div class=\"sign-box\">\r\n                            <h1>Sign In<p></p></h1>\r\n\r\n                            <form action=\"#\" method=\"get\" autocomplete=\"off\">\r\n\r\n                                <div class=\"input-field\">\r\n                                    <p>User Name :</p>\r\n                                    <input class=\"input\" onInput={(event) => { setUserName(event.target.value) }} />\r\n                                </div>\r\n\r\n                                <div class=\"input-field\">\r\n                                    <p>Password :</p>\r\n                                    <input type=\"password\" class=\"input\" onInput={(event) => { setPassword(event.target.value) }} />\r\n                                </div>\r\n\r\n\r\n                                <div class=\"input-field right\">\r\n                                    <button class=\"btn\" onClick={signUp} >Play</button>\r\n                                </div>\r\n\r\n\r\n                                <div className='DemoUserAndDoctor'>\r\n                                    <a href=\"\" onClick={signUpDemoUser} >Connect Demo User</a>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </Modal>\r\n                </>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Login;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\register.js",[],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\profile.js",["75"],"import { useHistory } from 'react-router-dom';\r\nimport './pages.css';\r\nimport React from 'react'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nconst Profile = () => {\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    let userProfile = JSON.parse(sessionStorage.getItem('usersArray')); // קבלת נתוני משתמש מהמאגר הראשי הכולל את כלל המשתמשים  \r\n    // מכיוון שהנתונים נשמרו קודם לכן בדף ההתחברות באותו המאגר \r\n\r\n\r\n\r\n\r\n    // כפתור התנתק המנקה את זכרון המאגר הראשי ומחזיר לדף ההתחברות --> (Session Storage)\r\n    const clearAll = () => {\r\n\r\n        sessionStorage.clear();\r\n\r\n        history.push('Login');\r\n        window.location.reload(false);\r\n\r\n    }\r\n\r\n\r\n\r\n    // לחיצה על הכפתור ומעבר למשחק\r\n    const ToTheGame = () => {\r\n\r\n        Swal.fire({\r\n            title: 'This game can only be played with keys (keyboard)!',\r\n            icon: 'warning',\r\n        })\r\n\r\n        history.push('game');\r\n\r\n    }\r\n\r\n\r\n\r\n    // עדכון פרטי משתמש - מעבר לטופס הרשמה\r\n    const UpdateDetails = (event) => {\r\n        event.preventDefault();\r\n        history.push('UpdateDetails');\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    if (userProfile == null) {\r\n\r\n        return (\r\n            <div class=\"userProfile\">\r\n                <p>You must be logged in to view this profile</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    if (userProfile != null) {\r\n\r\n        return (\r\n\r\n            <div className='cardProfile'>\r\n\r\n                <div class=\"cardStyle\">\r\n\r\n                    <div class=\"col-md-4\">\r\n\r\n                        <div class=\"CardUser p-3 py-4\">\r\n\r\n                            <div class=\"text-center\">\r\n                                <img src={userProfile.profileImg} width=\"100\" class=\"rounded-circle\" />\r\n                            </div>\r\n\r\n                            <div class=\"text-center mt-3\">\r\n                                <h5 class=\"mt-2 mb-0\">Hello {userProfile.userName}</h5>\r\n\r\n                                <br />\r\n\r\n                                <div class=\"px-4 mt-1\">\r\n\r\n                                    <p class=\"fonts\">Email - {userProfile.email} </p>\r\n                                    <p class=\"fonts\">Birthday - {userProfile.startDate} </p>\r\n\r\n                                </div>\r\n\r\n                                <br />\r\n\r\n                                <div class=\"buttons\">\r\n\r\n                                    <button class=\"btn btn-success px-4\" onClick={ToTheGame}>Go Play</button>\r\n                                    <button class=\"btn btn-warning px-4 ms-3\" onClick={UpdateDetails}>Update User</button>\r\n                                    <button class=\"btn btn-danger px-4 ms-3\" onClick={clearAll}>Log Out</button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Profile;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\admin.js",["76","77","78"],"import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './pages.css';\r\nimport React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nconst Admin = () => {\r\n\r\n\r\n  let users = JSON.parse(localStorage.getItem('users'))\r\n\r\n  let countUsers = 1;\r\n\r\n\r\n  const [list, setUser] = useState(users);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n\r\n\r\n  // מחיקת משתמש ממאגר הנתונים\r\n  const DeleteUser = (userName) => {\r\n\r\n    const newList = list.filter((item) => item.userName !== userName); // מעבר על הרשימה של המשתמשים ובדיקה על איזה משתמש מדובר לפי שמו \r\n\r\n    setUser(newList);\r\n\r\n    let devicesArray = JSON.parse(localStorage.getItem('users'))\r\n\r\n    for (let i = 0; i < devicesArray.length; i++) {\r\n      if (devicesArray[i].userName == userName) {\r\n        localStorage.removeItem(devicesArray[i]); // מחיקת משתמש ספציפי מממאגר הנתונים\r\n        devicesArray.splice(devicesArray.indexOf(devicesArray[i]), 1) // השיטה משנה את התוכן של מערך על ידי הסרה במיקום ספציפי\r\n        localStorage.setItem('users', JSON.stringify(devicesArray)); // השמה של המערך החדש ללא אותו משתמש במאגר\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    window.location.reload(false); // רענון דף\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //  עדכון פרטי משתמש - מעביר את המשתמש לטופס עדכון פרטים ושמירתם\r\n  const UpdateDetails = (userName) => {\r\n\r\n    const newList = list.filter((item) => item.userName !== userName);\r\n\r\n    setUser(newList);\r\n\r\n\r\n    let usersArray = JSON.parse(localStorage.getItem('users'));\r\n\r\n    for (let i = 0; i < usersArray.length; i++) {\r\n      if (usersArray[i].userName == userName) {\r\n        sessionStorage.setItem('usersArray', JSON.stringify(usersArray[i]));\r\n        history.push('updateDetails');\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (list == null) {\r\n\r\n\r\n    return (\r\n\r\n      <div className=\"navigation\">\r\n\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"2%\", textAlign: \"center\" }}>#</th>\r\n              <th>Image user</th>\r\n              <th>User name</th>\r\n              <th>Birthday</th>\r\n              <th>Email</th>\r\n              <th style={{ width: \"9%\", textAlign: \"center\" }}></th>\r\n              <th style={{ width: \"10%\", textAlign: \"center\" }}></th>\r\n            </tr>\r\n          </thead>\r\n        )}\r\n        </Table>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  if (list != null) {\r\n\r\n    return (\r\n      <div className=\"navigation\">\r\n\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"2%\", textAlign: \"center\" }}>#</th>\r\n              <th>Image user</th>\r\n              <th>User name</th>\r\n              <th>Birthday</th>\r\n              <th>Email</th>\r\n              <th style={{ width: \"9%\", textAlign: \"center\" }}></th>\r\n              <th style={{ width: \"10%\", textAlign: \"center\" }}></th>\r\n            </tr>\r\n          </thead>\r\n\r\n\r\n          {list.map((item) =>\r\n            <tbody>\r\n              <tr>\r\n                <td style={{ textAlign: \"center\" }}>{countUsers++}</td>\r\n                <td><img src={item.profileImg}></img></td>\r\n                <td>{item.userName}</td>\r\n                <td>{item.startDate}</td>\r\n                <td>{item.email}</td>\r\n\r\n                <td><button type=\"button\" onClick={() => DeleteUser(item.userName)}>\r\n                  Remove User\r\n                </button></td>\r\n\r\n                <td><button type=\"button\" onClick={() => UpdateDetails(item.userName)}>\r\n                  Update details\r\n                </button></td>\r\n\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </Table>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Admin;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\game.js",["79","80","81","82"],"import React, { Component } from 'react';\r\nimport Snake from './Snake';\r\nimport Food from \"../components/Food\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\n\r\n\r\nconst getRandomCoordinates = () => { // פונקציה שמגדירה את מיקום האוכל באופן רנדומלי - הקוביה האדומה\r\n\r\n  let min = 1;\r\n  let max = 98;\r\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  return [x, y]\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst initialState = {  // מצב התחלתי של הנחש שלנו\r\n\r\n  food: getRandomCoordinates(),\r\n\r\n  speed: 200,         // מהירות\r\n  direction: 'RIGHT', // הנחש מאותחל כפונה ימינה\r\n  snakeDots: [   // מערך התחלתי של כמות נקודות הנחש לפני שגדל\r\n    [0, 0], // 0\r\n    [2, 0]  // 1\r\n  ]\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass game extends Component { // הגדרת רכיב - game\r\n\r\n  state = initialState; // מגדיר לנו מצב התחלתי\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    setInterval(this.moveSnake, this.state.speed); // שיטה המאפשרת מרווחי זמן \r\n    document.onkeydown = this.onKeyDown; // אירוע מקלדת - כלומר מאפשר למשתמש לשחק ע\"י המקלדת\r\n\r\n  }\r\n\r\n\r\n  componentDidUpdate() { // מאפשר עדכון לאחר בדיקות\r\n\r\n    this.checkIfOutOfBorders();\r\n    this.checkIfEat();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  onKeyDown = (e) => { // מגדיר לנו פניות אפשריות של הנחש\r\n\r\n    switch (e.keyCode) { // לכל מקש כיווני יש קוד מספרי שונה לכן זה 38,39 וכן הלאה\r\n      case 38:\r\n        this.setState({ direction: 'UP' });\r\n        break;\r\n      case 40:\r\n        this.setState({ direction: 'DOWN' });\r\n        break;\r\n      case 37:\r\n        this.setState({ direction: 'LEFT' });\r\n        break;\r\n      case 39:\r\n        this.setState({ direction: 'RIGHT' });\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  moveSnake = () => {\r\n\r\n    let dots = [...this.state.snakeDots];  // נקודות \r\n    let head = dots[dots.length - 1];      // בתוך משתנה הראש נכנסות לנו הנקודות מהסוף\r\n\r\n    switch (this.state.direction) { // אחראי לנו על מצב הכיוונים של הנחש\r\n      case 'RIGHT':\r\n        head = [head[0] + 2, head[1]]; // תזוזה ימינה על ציר האיקס החיובי \r\n        break;\r\n      case 'LEFT':\r\n        head = [head[0] - 2, head[1]]; // תזוזה שמאלה על ציר האיקס השלילי\r\n        break;\r\n      case 'DOWN':\r\n        head = [head[0], head[1] + 2]; // תזוזה למטה\r\n        break;\r\n      case 'UP':\r\n        head = [head[0], head[1] - 2]; // תזוזה למעלה\r\n        break;\r\n    }\r\n\r\n\r\n    dots.push(head);\r\n    dots.shift();   // מאתחל את הנקודות לפי כיוון חדש\r\n\r\n    this.setState({\r\n      snakeDots: dots\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  checkIfOutOfBorders() { // בדיקה האם הנחש יוצא מגבולות המשחק\r\n\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) { // בדיקה בכל הצירים - כמה הנחש יכול לפנות במרחב\r\n      this.onGameOver(); // המשחק נגמר - הדפסת הודעה לסיום משחק\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  checkIfEat() { // אם הנחש במצב אכילה אז יש הופעה רנדומלית חדשה של האוכל\r\n\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let food = this.state.food;\r\n    if (head[0] == food[0] && head[1] == food[1]) {\r\n      this.setState({\r\n        food: getRandomCoordinates()\r\n      })\r\n      this.enlargeSnake(); // הנחש גדל\r\n      this.increaseSpeed(); // המעטת המהירות של הנחש\r\n    }\r\n  }\r\n\r\n\r\n\r\n  enlargeSnake() { //  אחראי על הגדלת הנחש בכל פעם כאשר הוא אוכל \r\n\r\n    let newSnake = [...this.state.snakeDots];\r\n\r\n    newSnake.unshift([]) // מוסיף כל פעם אוכל כלומר נקודות לתחילת המערך - ראש הנחש\r\n\r\n    this.setState({\r\n      snakeDots: newSnake\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n  increaseSpeed() { // הורדת מהירות הנחש כאשר הוא אוכל מפעם לפעם\r\n\r\n    if (this.state.speed > 10) {\r\n\r\n      this.setState({\r\n        speed: this.state.speed - 10\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  onGameOver() {\r\n\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'oops..',\r\n      text: `Game Over. Snake length is ${this.state.snakeDots.length}`,\r\n    })\r\n\r\n    this.setState(initialState) // אתחול מחדש של הנחש למצב התחלתי כי המשתמש הפסיד\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() { // מאפשר לקבל נתונים \r\n    return (\r\n\r\n      <div className='placeGame'>\r\n        <div className=\"game-area\">\r\n          <Snake snakeDots={this.state.snakeDots} />\r\n          <Food dot={this.state.food} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n//  הפעלת קומפוננטה של אוכל - קובע את מיקום האוכל בכל פעם רנדומלית -Food\r\nexport default game;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\updateDetails.js",["83"],"import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport FormFeild from \"../components/formField\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport './pages.css';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\n\r\nconst UpdateDetails = () => {\r\n\r\n\r\n    //הגדרת משתנים עבור טופס הרשמה\r\n    const history = useHistory()\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [startDate, setStartDate] = useState('');\r\n    const [profileImg, setProfileImg] = useState('')\r\n\r\n\r\n\r\n    //משתנה הצגת ערים\r\n    const [cities, setCities] = useState([])\r\n\r\n\r\n\r\n\r\n    //פונקציה מוציאה את כל הנתונים(ערים) שקיימים במערך\r\n    const getCitiesFromJson = async () => {\r\n        let response = await fetch('./data/israel-cities.json');\r\n        let data = await response.json(); //the values\r\n        setCities(data);\r\n    }\r\n\r\n\r\n\r\n\r\n    //בדיקה אם כל נתונים מלאים\r\n    const checkForm = () => {\r\n\r\n        if (userName === '' || password === '' || confirmPassword === '' || city === '') {\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'oops..',\r\n                text: 'All fields must be filled in.',\r\n            })\r\n\r\n            return false;\r\n        }\r\n\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // בדיקת שם משתמש\r\n    const checkUserName = () => {\r\n\r\n        // let decimal=  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{5,60}$/;\r\n        let decimal = /([A-Z-a-z])/;\r\n\r\n        if (userName.match(decimal)) {\r\n            return true;\r\n        }\r\n        else {\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'oops..',\r\n                text: 'wrong user name - you need big char and letter char',\r\n            })\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // בדיקת סיסמא\r\n    const checkPassword = () => {\r\n\r\n        // let decimal=  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{5,12}$/;\r\n        let decimal = /.{5,12}/;\r\n\r\n        if (password.match(decimal)) {\r\n            return true;\r\n        }\r\n\r\n        else {\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'oops..',\r\n                text: 'wrong password - you need 5-12 numbers',\r\n            })\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // אימות סיסמאות\r\n    const checkCorrectPassword = () => {\r\n\r\n        if (password === confirmPassword)\r\n            return true;\r\n\r\n        else {\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'oops..',\r\n                text: 'The passwords do not match',\r\n            })\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //בדיקת מייל תקין \r\n    const checkEmail = () => {\r\n\r\n        let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n\r\n        if (pattern.test(email)) {\r\n            return true;\r\n        }\r\n\r\n        else if (!(pattern.test(email))) {\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'oops..',\r\n                text: 'wrong email',\r\n            })\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // בדיקת תאריך תקין\r\n    const checkDate = () => {\r\n\r\n        if (startDate == null) {\r\n\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                title: 'oops..',\r\n                text: 'wrong date',\r\n            })\r\n\r\n            return false;\r\n        }\r\n        else if (startDate != null) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // העלת תמונת פרופיל לדף\r\n    const uploadImage = (input) => {\r\n        if (input.files && input.files[0]) {\r\n            let reader = new FileReader();\r\n\r\n            reader.onload = function (e) {\r\n                setProfileImg(e.target.result);\r\n            }\r\n            reader.readAsDataURL(input.files[0]); //convert to base64 string\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //ההרשמה כשלוחצים על כפתור הרשמה\r\n    const signup = (event) => {\r\n\r\n        event.preventDefault(); //ביטול ניקוי הטופס באופן דיפולטיבי\r\n\r\n        if (checkForm() && checkUserName() && checkEmail() && checkPassword() && checkCorrectPassword() && checkDate()) {\r\n\r\n            let users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n            let userDetails = JSON.parse(sessionStorage.getItem('usersArray')) // קבלת משתמש ספציפי כדי לעדכן את הפרטים שלו\r\n\r\n\r\n\r\n            for (let i = 0; i < users.length; i++) {\r\n                if (users[i].name == userDetails[\"name\"]) { // בדיקה אם השם במאגר הנתונים שווה ל-שם של המשתמש הספציפי\r\n                    // עדכון פרטים חדשים למשתמש ספציפי\r\n                    users[i].userName = userName;\r\n                    users[i].password = password;\r\n                    users[i].confirmPassword = confirmPassword;\r\n                    users[i].city = city;\r\n                    users[i].email = email;\r\n                    users[i].startDate = startDate;\r\n                    users[i].profileImg = profileImg;\r\n                }\r\n            }\r\n\r\n            // השמה של הפרטים העדכניים בתוך משתמש ספציפי\r\n            userDetails[\"userName\"] = userName;\r\n            userDetails[\"password\"] = password;\r\n            userDetails[\"confirmPassword\"] = confirmPassword;\r\n            userDetails[\"city\"] = city;\r\n            userDetails[\"email\"] = email;\r\n            userDetails[\"startDate\"] = startDate;\r\n            userDetails[\"profileImg\"] = profileImg;\r\n\r\n\r\n            sessionStorage.setItem('usersArray', JSON.stringify(userDetails)); // כעת עודכנו במאגר פרטים חדשים\r\n            localStorage.setItem('users', JSON.stringify(users));\r\n\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'successfully',\r\n                text: 'You have successfully updated your details',\r\n            })\r\n\r\n            history.push('Login');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    //udate the list of cities once the page load\r\n    useEffect(() => {\r\n        getCitiesFromJson();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div class=\"register\">\r\n\r\n                <form className=\"bagroundToImage\" onSubmit={signup}>\r\n\r\n                    <h1>Update your details : </h1>\r\n\r\n                    <FormFeild input type=\"text\" name=\"User name\" action={setUserName} />\r\n                    <FormFeild input type=\"password\" name=\"Password\" action={setPassword} />\r\n                    <FormFeild input type=\"password\" name=\"Confirm password\" action={setConfirmPassword} />\r\n                    <FormFeild input type=\"list\" listId=\"listOfCities\" data={cities} name=\"City\" action={setCity} />\r\n                    <FormFeild input type=\"text\" name=\"Email\" action={setEmail} />\r\n                    <FormFeild input type=\"date\" name=\"Date\" action={setStartDate} />\r\n                    <FormFeild input type=\"file\" name=\"Profile image\" targetImg={profileImg} action={uploadImage} />\r\n\r\n                    <div class=\"buttonsRegister\">\r\n                        <button type=\"submit\" class=\"btn btn-success\" >submit</button>\r\n                        <button type=\"reset\" class=\"btn btn-danger\">reset</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UpdateDetails;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\components\\menu.js",[],"C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\components\\formField.js",["84"],"\r\n//take city list for Register\r\n\r\nconst FormFeild = (props) => {\r\n\r\n    switch (props.type) {\r\n        \r\n        case 'list': // לקיחת עיר ספציפית מרשימת ערים כללית\r\n            return (\r\n                <div className=\"field\">\r\n                    <label>{props.name}</label>\r\n                    <datalist id={props.listId}>\r\n                        {props.data.map(item => <option value={item.name}> {item.name} </option>)}\r\n                    </datalist>\r\n                    <input type=\"text\" list={props.listId} onInput={(event) => { props.action(event.target.value) }} />\r\n                </div>\r\n            )\r\n\r\n        case 'file': // אחראי על העלת תמונה מקובץ\r\n            return (\r\n                <div className=\"field\">\r\n                    <label>{props.name}</label>\r\n                    <input type={props.type} onChange={(event) => { props.action(event.target) }}></input>\r\n                    <img width=\"300px\" src={props.targetImg} />\r\n                </div>\r\n            )\r\n        default:\r\n            return (\r\n                <div className=\"field\">\r\n                    <label>{props.name}</label>\r\n                    <input type={props.type} onInput={(event) => { props.action(event.target.value) }} />\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default FormFeild;","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\pages\\Snake.js",["85"],"import React from 'react';\n\nexport default (props) => {\n\n  return (\n    \n    <div>\n      {props.snakeDots.map((dot) => { \n        const style = {\n          left: `${dot[0]}%`,\n          top: `${dot[1]}%`\n        }\n        return (\n          <div className=\"snake-dot\" style={style}></div>\n        )\n      })}\n    </div>\n  )\n}","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\components\\Food.js",["86"],"import React from 'react';\n\n\nexport default (props) => {\n\n  const style = {  // מקבל את הנקודות מהדף של ה\"משחק\" ולפי זה מעלה נקודות של הנחש\n\n    left: `${props.dot[0]}%`,\n    top: `${props.dot[1]}%`\n  }\n\n\n  return (\n\n    <div className=\"snake-food\" style={style}></div>\n  )\n\n}","C:\\Users\\kfar-\\Desktop\\My_project's\\WebSite\\Web_Game_snake_react_js\\webNew\\webNew\\web\\web\\ProjectRegLog\\src\\components\\fotter.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":46,"column":23,"nodeType":"93","messageId":"94","endLine":46,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":46,"column":42,"nodeType":"93","messageId":"94","endLine":46,"endColumn":44},{"ruleId":"91","severity":1,"message":"95","line":52,"column":44,"nodeType":"93","messageId":"94","endLine":52,"endColumn":46},{"ruleId":"91","severity":1,"message":"95","line":52,"column":83,"nodeType":"93","messageId":"94","endLine":52,"endColumn":85},{"ruleId":"91","severity":1,"message":"95","line":63,"column":21,"nodeType":"93","messageId":"94","endLine":63,"endColumn":23},{"ruleId":"91","severity":1,"message":"95","line":63,"column":54,"nodeType":"93","messageId":"94","endLine":63,"endColumn":56},{"ruleId":"96","severity":1,"message":"97","line":114,"column":21,"nodeType":"98","endLine":114,"endColumn":71},{"ruleId":"99","severity":1,"message":"100","line":147,"column":37,"nodeType":"98","endLine":147,"endColumn":74},{"ruleId":"96","severity":1,"message":"97","line":166,"column":21,"nodeType":"98","endLine":166,"endColumn":71},{"ruleId":"99","severity":1,"message":"100","line":200,"column":37,"nodeType":"98","endLine":200,"endColumn":74},{"ruleId":"96","severity":1,"message":"97","line":81,"column":33,"nodeType":"98","endLine":81,"endColumn":104},{"ruleId":"91","severity":1,"message":"95","line":35,"column":36,"nodeType":"93","messageId":"94","endLine":35,"endColumn":38},{"ruleId":"91","severity":1,"message":"95","line":63,"column":34,"nodeType":"93","messageId":"94","endLine":63,"endColumn":36},{"ruleId":"96","severity":1,"message":"97","line":128,"column":21,"nodeType":"98","endLine":128,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":66,"column":5,"nodeType":"103","messageId":"104","endLine":79,"endColumn":6},{"ruleId":"101","severity":1,"message":"102","line":90,"column":5,"nodeType":"103","messageId":"104","endLine":103,"endColumn":6},{"ruleId":"91","severity":1,"message":"95","line":135,"column":17,"nodeType":"93","messageId":"94","endLine":135,"endColumn":19},{"ruleId":"91","severity":1,"message":"95","line":135,"column":39,"nodeType":"93","messageId":"94","endLine":135,"endColumn":41},{"ruleId":"91","severity":1,"message":"95","line":208,"column":35,"nodeType":"93","messageId":"94","endLine":208,"endColumn":37},{"ruleId":"96","severity":1,"message":"97","line":24,"column":21,"nodeType":"98","endLine":24,"endColumn":64},{"ruleId":"105","severity":1,"message":"106","line":3,"column":1,"nodeType":"107","endLine":19,"endColumn":2},{"ruleId":"105","severity":1,"message":"106","line":4,"column":1,"nodeType":"107","endLine":18,"endColumn":2},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]